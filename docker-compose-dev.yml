services:

  db:
    image: postgres:17
    restart: "no"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - default
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_PORT=${POSTGRES_PORT?Variable not set}
    command: -p ${POSTGRES_PORT}

  redis:
    image: redis:latest
    restart: "no"
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "-n", "${REDIS_DB}", "--no-auth-warning", "--raw", "incr", "ping"]
      # test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "-a", "${REDIS_PASSWORD}", "-n", "${REDIS_DB}", "--no-auth-warning", "--raw", "incr", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "127.0.0.1:${REDIS_PORT}:${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PORT=${REDIS_PORT?Variable not set}
    command: --port ${REDIS_PORT}

  # prestart:
  #   build:
  #     context: .
  #   networks:
  #     - default
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #       restart: true
  #   command: bash scripts/prestart.sh
  #   env_file:
  #     - .env
  #   environment:
  #     - ENVIRONMENT=${ENVIRONMENT}
  #     - POSTGRES_HOST=db
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USERNAME=${POSTGRES_USERNAME?Variable not set}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}

  # bot:
  #   image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
  #   container_name: ankibenefitbot
  #   build: .
  #   restart: "no"
  #   env_file:
  #     - .env

volumes:
  app-db-data:
  redis-data:
